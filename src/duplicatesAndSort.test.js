import { sort, removeDuplicates, getWords } from './duplicatesAndSort'

it('sort', () => {
  const str1 =
    "Its a dancing house. In this house, \t \n \n there's a granny,\n\n\n a dancing granny,  \n on that granny there's a kid,  \na sleeping kid"

  const str2 = ' E B A B D A C D E C B A D'

  expect(getWords(str1)).toStrictEqual([
    'Its',
    'a',
    'dancing',
    'house',
    'In',
    'this',
    'house',
    "there's",
    'a',
    'granny',
    'a',
    'dancing',
    'granny',
    'on',
    'that',
    'granny',
    "there's",
    'a',
    'kid',
    'a',
    'sleeping',
    'kid',
  ])
  expect(removeDuplicates(getWords(str1))).toStrictEqual([
    'Its',
    'a',
    'dancing',
    'house',
    'In',
    'this',
    "there's",
    'granny',
    'on',
    'that',
    'kid',
    'sleeping',
  ])
  expect(sort(removeDuplicates(getWords(str1)))).toStrictEqual([
    'In',
    'Its',
    'a',
    'dancing',
    'granny',
    'house',
    'kid',
    'on',
    'sleeping',
    'that',
    "there's",
    'this',
  ])
  expect(getWords(str2)).toStrictEqual([
    'E',
    'B',
    'A',
    'B',
    'D',
    'A',
    'C',
    'D',
    'E',
    'C',
    'B',
    'A',
    'D',
  ])
  expect(removeDuplicates(getWords(str2))).toStrictEqual([
    'E',
    'B',
    'A',
    'D',
    'C',
  ])
  expect(sort(removeDuplicates(getWords(str2)))).toStrictEqual([
    'A',
    'B',
    'C',
    'D',
    'E',
  ])
})
